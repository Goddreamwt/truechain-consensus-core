// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fastchain.proto

package fastchain

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckLeaderReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckLeaderReq) Reset()         { *m = CheckLeaderReq{} }
func (m *CheckLeaderReq) String() string { return proto.CompactTextString(m) }
func (*CheckLeaderReq) ProtoMessage()    {}
func (*CheckLeaderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fastchain_ec67cbc80a8b82c2, []int{0}
}
func (m *CheckLeaderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckLeaderReq.Unmarshal(m, b)
}
func (m *CheckLeaderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckLeaderReq.Marshal(b, m, deterministic)
}
func (dst *CheckLeaderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckLeaderReq.Merge(dst, src)
}
func (m *CheckLeaderReq) XXX_Size() int {
	return xxx_messageInfo_CheckLeaderReq.Size(m)
}
func (m *CheckLeaderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckLeaderReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckLeaderReq proto.InternalMessageInfo

type CheckLeaderResp struct {
	Message              bool     `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckLeaderResp) Reset()         { *m = CheckLeaderResp{} }
func (m *CheckLeaderResp) String() string { return proto.CompactTextString(m) }
func (*CheckLeaderResp) ProtoMessage()    {}
func (*CheckLeaderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fastchain_ec67cbc80a8b82c2, []int{1}
}
func (m *CheckLeaderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckLeaderResp.Unmarshal(m, b)
}
func (m *CheckLeaderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckLeaderResp.Marshal(b, m, deterministic)
}
func (dst *CheckLeaderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckLeaderResp.Merge(dst, src)
}
func (m *CheckLeaderResp) XXX_Size() int {
	return xxx_messageInfo_CheckLeaderResp.Size(m)
}
func (m *CheckLeaderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckLeaderResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckLeaderResp proto.InternalMessageInfo

func (m *CheckLeaderResp) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func init() {
	proto.RegisterType((*CheckLeaderReq)(nil), "fastchain.CheckLeaderReq")
	proto.RegisterType((*CheckLeaderResp)(nil), "fastchain.CheckLeaderResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FastChainClient is the client API for FastChain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FastChainClient interface {
	// RPC service that responds whether the node is the leader
	CheckLeader(ctx context.Context, in *CheckLeaderReq, opts ...grpc.CallOption) (*CheckLeaderResp, error)
}

type fastChainClient struct {
	cc *grpc.ClientConn
}

func NewFastChainClient(cc *grpc.ClientConn) FastChainClient {
	return &fastChainClient{cc}
}

func (c *fastChainClient) CheckLeader(ctx context.Context, in *CheckLeaderReq, opts ...grpc.CallOption) (*CheckLeaderResp, error) {
	out := new(CheckLeaderResp)
	err := c.cc.Invoke(ctx, "/fastchain.FastChain/CheckLeader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FastChainServer is the server API for FastChain service.
type FastChainServer interface {
	// RPC service that responds whether the node is the leader
	CheckLeader(context.Context, *CheckLeaderReq) (*CheckLeaderResp, error)
}

func RegisterFastChainServer(s *grpc.Server, srv FastChainServer) {
	s.RegisterService(&_FastChain_serviceDesc, srv)
}

func _FastChain_CheckLeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckLeaderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastChainServer).CheckLeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fastchain.FastChain/CheckLeader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastChainServer).CheckLeader(ctx, req.(*CheckLeaderReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FastChain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fastchain.FastChain",
	HandlerType: (*FastChainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckLeader",
			Handler:    _FastChain_CheckLeader_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fastchain.proto",
}

func init() { proto.RegisterFile("fastchain.proto", fileDescriptor_fastchain_ec67cbc80a8b82c2) }

var fileDescriptor_fastchain_ec67cbc80a8b82c2 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x4b, 0x2c, 0x2e,
	0x49, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x09, 0x70, 0xf1, 0x39, 0x67, 0xa4, 0x26, 0x67, 0xfb, 0xa4, 0x26, 0xa6, 0xa4, 0x16, 0x05, 0xa5,
	0x16, 0x2a, 0x69, 0x73, 0xf1, 0xa3, 0x88, 0x14, 0x17, 0x08, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16,
	0x17, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x04, 0xc1, 0xb8, 0x46, 0xc1, 0x5c,
	0x9c, 0x6e, 0x89, 0xc5, 0x25, 0xce, 0x20, 0xb3, 0x84, 0xdc, 0xb8, 0xb8, 0x91, 0x74, 0x0a, 0x49,
	0xea, 0x21, 0xec, 0x45, 0xb5, 0x43, 0x4a, 0x0a, 0x97, 0x54, 0x71, 0x81, 0x12, 0x43, 0x12, 0x1b,
	0xd8, 0x95, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x96, 0x7a, 0x46, 0xb8, 0x00, 0x00,
	0x00,
}
